{
  "version": 3,
  "file": "gurtzeImageDialog.js",
  "sourceRoot": "",
  "sources": [
    "gurtzeImageDialog.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "class Gurtze.ImageDialog extends ContentTools.DialogUI\r\n    constructor: () -> \r\n        super('Select image')\r\n\r\n        if Gurtze.IMAGE_GALLERY\r\n            console.log('setting up imggallery')\r\n            Gurtze.IMAGE_GALLERY(this)\r\n    \r\n    mount: () -> \r\n        super()        \r\n\r\n        @_img = document.createElement('img')\r\n        @_img.setAttribute('src', 'https://www.placecage.com/gif/200/300')\r\n        # @constructor.createDiv(['gz-thumb'], null, 'quack')\r\n\r\n        @_domView.appendChild(@_img)\r\n        \r\n        @_addDOMEventListeners()   \r\n\r\n    setSource: (imglist) -> \r\n        console.log('set imglist')\r\n    \r\nGurtze.EXAMPLE_IMAGE_GALLERY = (dialog) ->\r\n\r\n    callback = () -> \r\n\r\n    console.log('fetching imglist...')\r\n    setTimeout(() -> \r\n        console.log('fetched imglist')\r\n        dialog.setSource([\r\n            {src: 'https://www.placecage.com/gif/200/300'},\r\n            {src: 'https://www.placecage.com/gif/200/300'},\r\n            {src: 'https://www.placecage.com/gif/200/300'}\r\n        ])\r\n    , 5 * 1000)\r\n\r\n\r\nclass Gurtze.OldImageDialog extends ContentTools.DialogUI\r\n\r\n    # A dialog to support inserting an image\r\n\r\n    # Note: The image dialog doesn't handle the uploading of images it expects\r\n    # this process to be handled by an external library. The external library\r\n    # should be defined as an object against the ContentTools namespace like so:\r\n    #\r\n    # ContentTools.IMAGE_UPLOADER = externalImageUploader\r\n    #\r\n    # The external library should provide an `init(dialog)` method. This method\r\n    # recieves the dialog widget and can then set up all required event bindings\r\n    # to support image uploads.\r\n\r\n    constructor: ()->\r\n        super('Select image')\r\n\r\n        # If applied, this is a handle to the crop marks component for the\r\n        # current image.\r\n        @_cropMarks = null\r\n\r\n        # If the dialog is populated, this is the URL of the image\r\n        @_imageURL = null\r\n\r\n        # If the dialog is populated, this is the size of the image\r\n        @_imageSize = null\r\n\r\n        # The upload progress of the dialog (0-100)\r\n        @_progress = 0\r\n\r\n        # The initial state of the dialog\r\n        @_state = 'empty'\r\n\r\n        # If an image uploader factory is defined create a new uploader for the\r\n        # dialog.\r\n        if ContentTools.IMAGE_UPLOADER\r\n            ContentTools.IMAGE_UPLOADER(this)\r\n\r\n    # Read-only properties\r\n\r\n    cropRegion: () ->\r\n        # Return the defined crop-region (top, left, bottom, right), values are\r\n        # normalized to the range 0.0 - 1.0. If no crop region is defined then\r\n        # the maximum region will be returned (e.g [0, 0, 1, 1])\r\n        if @_cropMarks\r\n            return @_cropMarks.region()\r\n\r\n        return [0, 0, 1, 1]\r\n\r\n    # Methods\r\n\r\n    addCropMarks: () ->\r\n        # Add crop marks to the current image\r\n        if @_cropMarks\r\n            return\r\n\r\n        # Determine the crop region\r\n        @_cropMarks = new CropMarksUI(@_imageSize)\r\n        @_cropMarks.mount(@_domView)\r\n\r\n        # Mark the crop control as active\r\n        ContentEdit.addCSSClass(@_domCrop, 'ct-control--active')\r\n\r\n    clear: () ->\r\n        # Clear the current image\r\n        if @_domImage\r\n            @_domImage.parentNode.removeChild(@_domImage)\r\n            @_domImage = null\r\n\r\n        # Clear image attributes\r\n        @_imageURL = null\r\n        @_imageSize = null\r\n\r\n        # Set the dialog to empty\r\n        @state('empty')\r\n\r\n    mount: () ->\r\n        # Mount the widget\r\n        super()\r\n\r\n        # Update dialog class\r\n        ContentEdit.addCSSClass(@_domElement, 'ct-image-dialog')\r\n        ContentEdit.addCSSClass(@_domElement, 'ct-image-dialog--empty')\r\n\r\n        # Update view class\r\n        # ContentEdit.addCSSClass(@_domView, 'ct-image-dialog__view')\r\n\r\n        # Add controls\r\n\r\n        # Image tools & progress bar\r\n        domTools = @constructor.createDiv(\r\n            ['ct-control-group', 'ct-control-group--left'])\r\n        @_domControls.appendChild(domTools)\r\n\r\n        # Rotate CCW\r\n        @_domRotateCCW = @constructor.createDiv([\r\n            'ct-control',\r\n            'ct-control--icon',\r\n            'ct-control--rotate-ccw'\r\n            ])\r\n        @_domRotateCCW.setAttribute(\r\n            'data-ct-tooltip',\r\n            ContentEdit._('Rotate') + ' -90°'\r\n            )\r\n        domTools.appendChild(@_domRotateCCW)\r\n\r\n        # Rotate CW\r\n        @_domRotateCW = @constructor.createDiv([\r\n            'ct-control',\r\n            'ct-control--icon',\r\n            'ct-control--rotate-cw'\r\n            ])\r\n        @_domRotateCW.setAttribute(\r\n            'data-ct-tooltip',\r\n            ContentEdit._('Rotate') + ' 90°'\r\n            )\r\n        domTools.appendChild(@_domRotateCW)\r\n\r\n        # Rotate CW\r\n        @_domCrop = @constructor.createDiv([\r\n            'ct-control',\r\n            'ct-control--icon',\r\n            'ct-control--crop'\r\n            ])\r\n        @_domCrop.setAttribute('data-ct-tooltip', ContentEdit._('Crop marks'))\r\n        domTools.appendChild(@_domCrop)\r\n\r\n        # Progress bar\r\n        domProgressBar = @constructor.createDiv(['ct-progress-bar'])\r\n        domTools.appendChild(domProgressBar)\r\n\r\n        @_domProgress = @constructor.createDiv(['ct-progress-bar__progress'])\r\n        domProgressBar.appendChild(@_domProgress)\r\n\r\n        # Actions\r\n        domActions = @constructor.createDiv(\r\n            ['ct-control-group', 'ct-control-group--right'])\r\n        @_domControls.appendChild(domActions)\r\n\r\n        # Upload button\r\n        @_domUpload = @constructor.createDiv([\r\n            'ct-control',\r\n            'ct-control--text',\r\n            'ct-control--upload'\r\n            ])\r\n        @_domUpload.textContent = ContentEdit._('Upload')\r\n        domActions.appendChild(@_domUpload)\r\n\r\n        # File input for upload\r\n        @_domInput = document.createElement('input')\r\n        @_domInput.setAttribute('class', 'ct-image-dialog__file-upload')\r\n        @_domInput.setAttribute('name', 'file')\r\n        @_domInput.setAttribute('type', 'file')\r\n        @_domInput.setAttribute('accept', 'image/*')\r\n        @_domUpload.appendChild(@_domInput)\r\n\r\n        # Insert\r\n        @_domInsert = @constructor.createDiv([\r\n            'ct-control',\r\n            'ct-control--text',\r\n            'ct-control--insert'\r\n            ])\r\n        @_domInsert.textContent = ContentEdit._('Insert')\r\n        domActions.appendChild(@_domInsert)\r\n\r\n        # Cancel\r\n        @_domCancelUpload = @constructor.createDiv([\r\n            'ct-control',\r\n            'ct-control--text',\r\n            'ct-control--cancel'\r\n            ])\r\n        @_domCancelUpload.textContent = ContentEdit._('Cancel')\r\n        domActions.appendChild(@_domCancelUpload)\r\n\r\n        # Clear\r\n        @_domClear = @constructor.createDiv([\r\n            'ct-control',\r\n            'ct-control--text',\r\n            'ct-control--clear'\r\n            ])\r\n        @_domClear.textContent = ContentEdit._('Clear')\r\n        domActions.appendChild(@_domClear)\r\n\r\n        # Add interaction handlers\r\n        @_addDOMEventListeners()\r\n\r\n        @dispatchEvent(@createEvent('imageuploader.mount'))\r\n\r\n    populate: (imageURL, imageSize) ->\r\n        # Populate the dialog with an image\r\n\r\n        # Set image attributes\r\n        @_imageURL = imageURL\r\n        @_imageSize = imageSize\r\n\r\n        # Check for existing image, if there isn't one add one\r\n        if not @_domImage\r\n            @_domImage = @constructor.createDiv(['ct-image-dialog__image'])\r\n            @_domView.appendChild(@_domImage)\r\n\r\n        # Set the image to appear\r\n        @_domImage.style['background-image'] = \"url(#{ imageURL })\"\r\n\r\n        # Set the dialog to populated\r\n        @state('populated')\r\n\r\n    progress: (progress) ->\r\n        # Get/Set upload progress\r\n        if progress is undefined\r\n            return @_progress\r\n\r\n        @_progress = progress\r\n\r\n        # Update progress bar width\r\n        if not @isMounted()\r\n            return\r\n\r\n        @_domProgress.style.width = \"#{ @_progress }%\"\r\n\r\n    removeCropMarks: () ->\r\n        # Remove crop marks from the current image\r\n        if not @_cropMarks\r\n            return\r\n\r\n        @_cropMarks.unmount()\r\n        @_cropMarks = null\r\n\r\n        # Mark the crop control as no longer active\r\n        ContentEdit.removeCSSClass(@_domCrop, 'ct-control--active')\r\n\r\n    save: (imageURL, imageSize, imageAttrs) ->\r\n        # Save and insert the current image\r\n        @dispatchEvent(\r\n            @createEvent(\r\n                'save',\r\n                {\r\n                    'imageURL': imageURL,\r\n                    'imageSize': imageSize,\r\n                    'imageAttrs': imageAttrs\r\n                })\r\n            )\r\n\r\n    state: (state) ->\r\n        # Set/get the state of the dialog (empty, uploading, populated)\r\n\r\n        if state is undefined\r\n            return @_state\r\n\r\n        # Check that we need to change the current state of the dialog\r\n        if @_state == state\r\n            return\r\n\r\n        # Modify the state\r\n        prevState = @_state\r\n        @_state = state\r\n\r\n        # Update state modifier class for the dialog\r\n        if not @isMounted()\r\n            return\r\n\r\n        ContentEdit.addCSSClass(@_domElement, \"ct-image-dialog--#{ @_state }\")\r\n        ContentEdit.removeCSSClass(\r\n            @_domElement,\r\n            \"ct-image-dialog--#{ prevState }\"\r\n            )\r\n\r\n    unmount: () ->\r\n        # Unmount the component from the DOM\r\n        super()\r\n\r\n        @_domCancelUpload = null\r\n        @_domClear = null\r\n        @_domCrop = null\r\n        @_domInput = null\r\n        @_domInsert = null\r\n        @_domProgress = null\r\n        @_domRotateCCW = null\r\n        @_domRotateCW = null\r\n        @_domUpload = null\r\n\r\n        @dispatchEvent(@createEvent('imageuploader.unmount'))\r\n\r\n    # Private methods\r\n\r\n    _addDOMEventListeners: () ->\r\n        # Add event listeners for the widget\r\n        super()\r\n\r\n        # File ready for upload\r\n        @_domInput.addEventListener 'change', (ev) =>\r\n            # Get the file uploaded\r\n            file = ev.target.files[0]\r\n\r\n            # Ignore empty file changes (this may occur when we change the\r\n            # value of the input field to '', see issue:\r\n            # https://github.com/GetmeUK/ContentTools/issues/385\r\n            unless file\r\n                return\r\n\r\n            # Clear the file inputs value so that the same file can be uploaded\r\n            # again if the user cancels the upload or clears it and starts then\r\n            # changes their mind.\r\n            ev.target.value = ''\r\n            if ev.target.value\r\n                # Hack for clearing the file field value in IE\r\n                ev.target.type = 'text'\r\n                ev.target.type = 'file'\r\n\r\n            @dispatchEvent(\r\n                @createEvent('imageuploader.fileready', {file: file})\r\n                )\r\n\r\n        # Cancel upload\r\n        @_domCancelUpload.addEventListener 'click', (ev) =>\r\n            @dispatchEvent(@createEvent('imageuploader.cancelupload'))\r\n\r\n        # Clear image\r\n        @_domClear.addEventListener 'click', (ev) =>\r\n            @removeCropMarks()\r\n            @dispatchEvent(@createEvent('imageuploader.clear'))\r\n\r\n        # Rotate the image\r\n        @_domRotateCCW.addEventListener 'click', (ev) =>\r\n            @removeCropMarks()\r\n            @dispatchEvent(@createEvent('imageuploader.rotateccw'))\r\n\r\n        @_domRotateCW.addEventListener 'click', (ev) =>\r\n            @removeCropMarks()\r\n            @dispatchEvent(@createEvent('imageuploader.rotatecw'))\r\n\r\n        @_domCrop.addEventListener 'click', (ev) =>\r\n            if @_cropMarks\r\n                @removeCropMarks()\r\n\r\n            else\r\n                @addCropMarks()\r\n\r\n        @_domInsert.addEventListener 'click', (ev) =>\r\n            @dispatchEvent(@createEvent('imageuploader.save'))\r\n\r\n\r\nclass CropMarksUI extends ContentTools.AnchoredComponentUI\r\n\r\n    # Crop marks widget. Allows a crop region to be defined for images in the\r\n    # image dialog.\r\n\r\n    constructor: (imageSize)->\r\n        super()\r\n\r\n        # Set when the component is mounted/fitted, holds the region the\r\n        # crop marks are restricted to.\r\n        @_bounds = null\r\n\r\n        # The handle currently being dragged\r\n        @_dragging = null\r\n\r\n        # The origin of the drag (e.g the top, left coordinates the drag started\r\n        # from).\r\n        @_draggingOrigin = null\r\n\r\n        # The physical size of the image being cropped\r\n        @_imageSize = imageSize\r\n\r\n    # Methods\r\n\r\n    mount: (domParent, before=null) ->\r\n        # Crop marks\r\n        @_domElement = @constructor.createDiv(['ct-crop-marks'])\r\n\r\n        # Clippers\r\n        @_domClipper = @constructor.createDiv(['ct-crop-marks__clipper'])\r\n        @_domElement.appendChild(@_domClipper)\r\n\r\n        # Rulers\r\n        @_domRulers = [\r\n            @constructor.createDiv([\r\n                'ct-crop-marks__ruler',\r\n                'ct-crop-marks__ruler--top-left'\r\n                ]),\r\n            @constructor.createDiv([\r\n                'ct-crop-marks__ruler',\r\n                'ct-crop-marks__ruler--bottom-right'\r\n                ])\r\n            ]\r\n        @_domClipper.appendChild(@_domRulers[0])\r\n        @_domClipper.appendChild(@_domRulers[1])\r\n\r\n        # Handles\r\n        @_domHandles = [\r\n            @constructor.createDiv([\r\n                'ct-crop-marks__handle',\r\n                'ct-crop-marks__handle--top-left'\r\n                ]),\r\n            @constructor.createDiv([\r\n                'ct-crop-marks__handle',\r\n                'ct-crop-marks__handle--bottom-right'\r\n                ])\r\n            ]\r\n        @_domElement.appendChild(@_domHandles[0])\r\n        @_domElement.appendChild(@_domHandles[1])\r\n\r\n        # Mount the widget\r\n        super(domParent, before)\r\n\r\n        # Fit the component to the parent components image\r\n        @_fit(domParent)\r\n\r\n    region: () ->\r\n        # Return the crop region (top, left, bottom, right), values are\r\n        # normalized to the range 0.0 - 1.0.\r\n        return [\r\n            parseFloat(@_domHandles[0].style.top) / @_bounds[1],\r\n            parseFloat(@_domHandles[0].style.left) / @_bounds[0],\r\n            parseFloat(@_domHandles[1].style.top) / @_bounds[1],\r\n            parseFloat(@_domHandles[1].style.left) / @_bounds[0]\r\n            ]\r\n\r\n    unmount: () ->\r\n        # Unmount the component from the DOM\r\n        super()\r\n\r\n        @_domClipper = null\r\n        @_domHandles = null\r\n        @_domRulers = null\r\n\r\n    # Private methods\r\n\r\n    _addDOMEventListeners: () ->\r\n        # Add event listeners for the widget\r\n        super()\r\n\r\n        # Handle the handles being dragged\r\n        @_domHandles[0].addEventListener 'mousedown', (ev) =>\r\n\r\n            # Check left mouse button used\r\n            if ev.button is 0\r\n                @_startDrag(0, ev.clientY, ev.clientX)\r\n\r\n        @_domHandles[1].addEventListener 'mousedown', (ev) =>\r\n\r\n            # Check left mouse button used\r\n            if ev.button is 0\r\n                @_startDrag(1, ev.clientY, ev.clientX)\r\n\r\n    _drag: (top, left) ->\r\n        # Handle dragging of handle/ruler\r\n        if @_dragging == null\r\n            return\r\n\r\n        # Prevent content selection while dragging elements\r\n        ContentSelect.Range.unselectAll()\r\n\r\n        # Calculate the new position of the handle\r\n        offsetTop = top - @_draggingOrigin[1]\r\n        offsetLeft = left - @_draggingOrigin[0]\r\n\r\n        # Apply constraints\r\n        height = @_bounds[1]\r\n        left = 0\r\n        top = 0\r\n        width = @_bounds[0]\r\n\r\n        # Cannot overlap\r\n        minCrop = Math.min(Math.min(ContentTools.MIN_CROP, height), width)\r\n\r\n        if @_dragging is 0\r\n            height = parseInt(@_domHandles[1].style.top) - minCrop\r\n            width = parseInt(@_domHandles[1].style.left) - minCrop\r\n        else\r\n            left = parseInt(@_domHandles[0].style.left) + minCrop\r\n            top = parseInt(@_domHandles[0].style.top) + minCrop\r\n\r\n        # Must be within bounds\r\n        offsetTop = Math.min(Math.max(top, offsetTop), height)\r\n        offsetLeft = Math.min(Math.max(left, offsetLeft), width)\r\n\r\n        # Move the handle\r\n        @_domHandles[@_dragging].style.top = \"#{ offsetTop }px\"\r\n        @_domHandles[@_dragging].style.left = \"#{ offsetLeft }px\"\r\n        @_domRulers[@_dragging].style.top = \"#{ offsetTop }px\"\r\n        @_domRulers[@_dragging].style.left = \"#{ offsetLeft }px\"\r\n\r\n    _fit: (domParent) ->\r\n        # Fit the crop marks element to reflect/overlap the image (displayed in\r\n        # the background of the domParent.\r\n\r\n        # Calculate the ratio required to fit the image into the parent DOM\r\n        rect = domParent.getBoundingClientRect()\r\n        widthScale = rect.width / @_imageSize[0]\r\n        heightScale = rect.height / @_imageSize[1]\r\n        ratio = Math.min(widthScale, heightScale)\r\n\r\n        # Calculate the position and size for the crop marks element\r\n        width = ratio * @_imageSize[0]\r\n        height = ratio * @_imageSize[1]\r\n        left = (rect.width - width) / 2\r\n        top = (rect.height - height) / 2\r\n\r\n        # Set the position and size of crop marks element\r\n        @_domElement.style.width = \"#{ width }px\"\r\n        @_domElement.style.height = \"#{ height }px\"\r\n        @_domElement.style.top = \"#{ top }px\"\r\n        @_domElement.style.left = \"#{ left }px\"\r\n\r\n        # Position the handles and rulers\r\n        @_domHandles[0].style.top = '0px'\r\n        @_domHandles[0].style.left = '0px'\r\n        @_domHandles[1].style.top = \"#{ height }px\"\r\n        @_domHandles[1].style.left = \"#{ width }px\"\r\n\r\n        @_domRulers[0].style.top = '0px'\r\n        @_domRulers[0].style.left = '0px'\r\n        @_domRulers[1].style.top = \"#{ height }px\"\r\n        @_domRulers[1].style.left = \"#{ width }px\"\r\n\r\n        # Set the bounds\r\n        @_bounds = [width, height]\r\n\r\n    _startDrag: (handleIndex, top, left) ->\r\n        # Handle start of handle/ruler drag\r\n\r\n        # Set dragging state\r\n        domHandle = @_domHandles[handleIndex]\r\n        @_dragging = handleIndex\r\n        @_draggingOrigin = [\r\n            left - parseInt(domHandle.style.left),\r\n            top - parseInt(domHandle.style.top)\r\n            ]\r\n\r\n        # Handle any mouse move event (as a drag)\r\n        @_onMouseMove = (ev) =>\r\n            @_drag(ev.clientY, ev.clientX)\r\n\r\n        document.addEventListener('mousemove', @_onMouseMove)\r\n\r\n        # Handle any mouse up event (as stop dragging)\r\n        @_onMouseUp = (ev) =>\r\n            @_stopDrag()\r\n\r\n        document.addEventListener('mouseup', @_onMouseUp)\r\n\r\n    _stopDrag: () ->\r\n        # Handle handle/ruler drag stopping\r\n\r\n        # Remove event handlers\r\n        document.removeEventListener('mousemove', @_onMouseMove)\r\n        document.removeEventListener('mouseup', @_onMouseUp)\r\n\r\n        # Unset dragging state\r\n        @_dragging = null\r\n        @_draggingOrigin = null"
  ]
}