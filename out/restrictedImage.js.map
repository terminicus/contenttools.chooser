{
  "version": 3,
  "file": "restrictedImage.js",
  "sourceRoot": "..",
  "sources": [
    "src/restrictedImage.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "class ContentTools.RestrictedImageTool extends ContentTools.Tools.Image\n    # Register the tool with the toolshelf\n    ContentTools.ToolShelf.stow(@, 'restrictedImage')\n\n    # The tooltip and icon modifier CSS class for the tool\n    @label = 'Image'\n    @icon = 'image'\n\n    @apply: (element, selection, callback) ->\n    # Dispatch `apply` event\n        toolDetail = {\n            'tool': this,\n            'element': element,\n            'selection': selection\n            }\n        if not @dispatchEditorEvent('tool-apply', toolDetail)\n            return\n\n        # If supported allow store the state for restoring once the dialog is\n        # cancelled.\n        if element.storeState\n            element.storeState()\n\n        # Set-up the dialog\n        app = ContentTools.EditorApp.get()\n\n        # Modal\n        modal = new ContentTools.ModalUI()\n\n        # Dialog\n        dialog = new ContentTools.RestrictedImageDialog()\n\n        # Support cancelling the dialog\n        dialog.addEventListener 'cancel', () =>\n\n            modal.hide()\n            dialog.hide()\n\n            if element.restoreState\n                element.restoreState()\n\n            callback(false)\n\n        # Support saving the dialog\n        dialog.addEventListener 'save', (ev) =>\n            detail = ev.detail()\n            imageURL = detail.imageURL\n            imageSize = detail.imageSize\n            imageAttrs = detail.imageAttrs\n\n            if not imageAttrs\n                imageAttrs = {}\n\n            imageAttrs.height = imageSize[1]\n            imageAttrs.src = imageURL\n            imageAttrs.width = imageSize[0]\n\n            if element.type() is 'ImageFixture'\n                # Configure the image source against the fixture\n                element.src(imageURL)\n\n            else\n                # Create the new image\n                image = new ContentEdit.Image(imageAttrs)\n\n                # Find insert position\n                [node, index] = @_insertAt(element)\n                node.parent().attach(image, index)\n\n                # Focus the new image\n                image.focus()\n\n            modal.hide()\n            dialog.hide()\n\n            callback(true)\n\n            # Dispatch `applied` event\n            @dispatchEditorEvent('tool-applied', toolDetail)\n\n        # Show the dialog\n        app.attach(modal)\n        app.attach(dialog)\n        modal.show()\n        dialog.show()\n\nclass ContentTools.RestrictedImageDialog extends ContentTools.DialogUI\n    constructor: () -> \n        super('Select image')\n\n        if @constructor.IMAGE_GALLERY\n            @constructor.IMAGE_GALLERY(this)\n    \n    mount: () -> \n        super()        \n        \n        @_addDOMEventListeners()   \n\n    setSource: (imglist) -> \n        tags = imglist.map((img) -> \n            tag = document.createElement('img')\n            tag.setAttribute('src', img.src)\n            return tag)\n\n        domView = @_domView\n        tags.forEach((tag) -> \n            domView.appendChild(tag))\n\n    _addDOMEventListeners: () ->\n        super()\n        @_domView.addEventListener('click', this._onImageSelect)\n\n    _onImageSelect: (e) => \n        if e.target.tagName.toUpperCase() == 'img'.toUpperCase()\n            e.preventDefault()\n            \n            url = e.target.getAttribute('src')\n            size = [200, 200]\n\n            @save(url, size, {})\n            \n    save: (imageURL, imageSize, imageAttrs) ->\n        # Save and insert the current image\n        @dispatchEvent(\n            @createEvent(\n                'save',\n                {\n                    'imageURL': imageURL,\n                    'imageSize': imageSize,\n                    'imageAttrs': imageAttrs\n                })\n            )\n    @EXAMPLE_IMAGE_GALLERY = (dialog) ->\n        console.log('fetching imglist...')\n        setTimeout(() -> \n            console.log('fetched imglist')\n            dialog.setSource([\n                {src: 'https://www.placecage.com/gif/200/300'},\n                {src: 'https://www.placecage.com/gif/200/100'},\n                {src: 'https://www.placecage.com/gif/250/250'},\n                {src: 'https://www.placecage.com/gif/300/200'},\n                {src: 'https://www.placecage.com/gif/400/400'},\n                {src: 'https://www.placecage.com/gif/200/200'},\n            ])\n        , 1 * 1000)"
  ]
}