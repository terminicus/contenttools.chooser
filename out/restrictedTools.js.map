{
  "version": 3,
  "file": "restrictedTools.js",
  "sourceRoot": "..",
  "sources": [
    "src/restrictedTools.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "class ContentTools.Tools.RestrictedImageTool extends ContentTools.Tools.Image\n    # Register the tool with the toolshelf\n    ContentTools.ToolShelf.stow(@, 'restrictedImage')\n\n    # The tooltip and icon modifier CSS class for the tool\n    @label = 'Image'\n    @icon = 'image'\n\n    @apply: (element, selection, callback) ->\n    # Dispatch `apply` event\n        toolDetail = {\n            'tool': this,\n            'element': element,\n            'selection': selection\n            }\n        if not @dispatchEditorEvent('tool-apply', toolDetail)\n            return\n\n        # If supported allow store the state for restoring once the dialog is\n        # cancelled.\n        if element.storeState\n            element.storeState()\n\n        # Set-up the dialog\n        app = ContentTools.EditorApp.get()\n\n        # Modal\n        modal = new ContentTools.ModalUI()\n\n        # Dialog\n        dialog = new ContentTools.RestrictedImageDialog()\n\n        # Support cancelling the dialog\n        dialog.addEventListener 'cancel', () =>\n\n            modal.hide()\n            dialog.hide()\n\n            if element.restoreState\n                element.restoreState()\n\n            callback(false)\n\n        # Support saving the dialog\n        dialog.addEventListener 'save', (ev) =>\n            detail = ev.detail()\n            imageURL = detail.imageURL\n            imageSize = detail.imageSize\n            imageAttrs = detail.imageAttrs\n\n            if not imageAttrs\n                imageAttrs = {}\n\n            imageAttrs.height = imageSize[1]\n            imageAttrs.src = imageURL\n            imageAttrs.width = imageSize[0]\n\n            if element.type() is 'ImageFixture'\n                # Configure the image source against the fixture\n                element.src(imageURL)\n\n            else\n                # Create the new image\n                image = new ContentEdit.Image(imageAttrs)\n\n                # Find insert position\n                [node, index] = @_insertAt(element)\n                node.parent().attach(image, index)\n\n                # Focus the new image\n                image.focus()\n\n            modal.hide()\n            dialog.hide()\n\n            callback(true)\n\n            # Dispatch `applied` event\n            @dispatchEditorEvent('tool-applied', toolDetail)\n\n        # Show the dialog\n        app.attach(modal)\n        app.attach(dialog)\n        modal.show()\n        dialog.show()\n\nclass ContentTools.RestrictedImageDialog extends ContentTools.DialogUI\n    constructor: () -> \n        super('Select image')\n    \n    mount: () -> \n        super()        \n        \n        @_addDOMEventListeners()   \n\n        if @constructor.IMAGE_GALLERY\n            @constructor.IMAGE_GALLERY(this)\n\n    setSource: (imglist) ->\n\n        domView = @_domView\n        domView.style.overflowY=\"scroll\";\n        table = document.createElement('table')\n        table.style.width= \"100%\"\n        thead = document.createElement('thead')\n        \n        nameTitle = document.createElement('th')\n        nameTitle.textContent = \"Name\"\n\n        descTitle = document.createElement('th')\n        descTitle.textContent = \"Description\"\n\n        imgTitle = document.createElement('th')\n        imgTitle.textContent = \"Image\"\n\n        thead.appendChild(nameTitle)\n        thead.appendChild(descTitle)\n        thead.appendChild(imgTitle)\n\n        tbody = document.createElement('tbody')\n        table.appendChild(thead)\n        table.appendChild(tbody)\n\n        tags = imglist.forEach (img) -> \n            tr = document.createElement('tr')\n            name = document.createElement('td')\n            name.textContent=img.name\n            name.style.verticalAlign='middle'\n            desc = document.createElement('td')\n            desc.textContent=img.desc\n            desc.style.verticalAlign='middle'\n            imgCol = document.createElement('td')\n            imgCol.style.textAlign='right'\n            imgEl = document.createElement('img')\n            imgEl.setAttribute('src', img.thumb || img.src)\n            imgEl.setAttribute('width', img.thumbWidth || 150)\n            imgEl.setAttribute('height', img.thumbHeight || 150)\n            imgCol.appendChild(imgEl)\n\n            tr.appendChild(name)\n            tr.appendChild(desc)\n            tr.appendChild(imgCol)\n\n            tbody.appendChild(tr)\n\n        domView.appendChild(table)\n\n    _addDOMEventListeners: () ->\n        super()\n        @_domView.addEventListener('click', this._onImageSelect)\n\n    _onImageSelect: (e) => \n        if e.target.tagName.toUpperCase() == 'img'.toUpperCase()\n            e.preventDefault()\n            \n            url = e.target.getAttribute('src')\n            size = [200, 200]\n\n            @save(url, size, {})\n            \n    save: (imageURL, imageSize, imageAttrs) ->\n        # Save and insert the current image\n        @dispatchEvent(\n            @createEvent(\n                'save',\n                {\n                    'imageURL': imageURL,\n                    'imageSize': imageSize,\n                    'imageAttrs': imageAttrs\n                })\n            )\n\nclass ContentTools.Tools.RestrictedLinkTool extends ContentTools.Tools.Bold\n\n    # Insert/Remove a link.\n\n    ContentTools.ToolShelf.stow(@, 'restrictedLink')\n\n    @label = 'Link'\n    @icon = 'link'\n    @tagName = 'a'\n\n    @getAttr: (attrName, element, selection) ->\n        # Get an attribute for the element and selection\n\n        # Images\n        if element.type() is 'Image'\n            if element.a\n                return element.a[attrName]\n\n        # Fixtures\n        else if element.isFixed() and element.tagName() is 'a'\n            return element.attr(attrName)\n\n        # Text\n        else\n            # Find the first character in the selected text that has an `a` tag\n            # and return the named attributes value.\n            [from, to] = selection.get()\n            selectedContent = element.content.slice(from, to)\n            for c in selectedContent.characters\n                if not c.hasTags('a')\n                    continue\n\n                for tag in c.tags()\n                    if tag.name() == 'a'\n                        return tag.attr(attrName)\n\n        return ''\n\n    @canApply: (element, selection) ->\n        # Return true if the tool can be applied to the current\n        # element/selection.\n        if element.type() is 'Image'\n            return true\n        else if element.isFixed() and element.tagName() is 'a'\n            return true\n        else\n            # Must support content\n            unless element.content\n                return false\n\n            # A selection must exist\n            if not selection\n                return false\n\n            # If the selection is collapsed then it must be within an existing\n            # link.\n            if selection.isCollapsed()\n                character = element.content.characters[selection.get()[0]]\n                if not character or not character.hasTags('a')\n                    return false\n\n            return true\n\n    @isApplied: (element, selection) ->\n        # Return true if the tool is currently applied to the current\n        # element/selection.\n        if element.type() is 'Image'\n            return element.a\n        else if element.isFixed() and element.tagName() is 'a'\n            return true\n        else\n            return super(element, selection)\n\n    @apply: (element, selection, callback) ->\n        # Dispatch `apply` event\n        toolDetail = {\n            'tool': this,\n            'element': element,\n            'selection': selection\n            }\n        if not @dispatchEditorEvent('tool-apply', toolDetail)\n            return\n\n        applied = false\n\n        # Prepare text elements for adding a link\n        if element.type() is 'Image'\n            # Images\n            rect = element.domElement().getBoundingClientRect()\n\n        else if element.isFixed() and element.tagName() is 'a'\n            # Fixtures\n            rect = element.domElement().getBoundingClientRect()\n\n        else\n            # If the selection is collapsed then we need to select the entire\n            # entire link.\n            if selection.isCollapsed()\n\n                # Find the bounds of the link\n                characters = element.content.characters\n                starts = selection.get(0)[0]\n                ends = starts\n\n                while starts > 0 and characters[starts - 1].hasTags('a')\n                    starts -= 1\n\n                while ends < characters.length and characters[ends].hasTags('a')\n                    ends += 1\n\n                # Select the link in full\n                selection = new ContentSelect.Range(starts, ends)\n                selection.select(element.domElement())\n\n            # Text elements\n            element.storeState()\n\n            # Add a fake selection wrapper to the selected text so that it\n            # appears to be selected when the focus is lost by the element.\n            selectTag = new HTMLString.Tag('span', {'class': 'ct--puesdo-select'})\n            [from, to] = selection.get()\n            element.content = element.content.format(from, to, selectTag)\n            element.updateInnerHTML()\n\n            # Measure a rectangle of the content selected so we can position the\n            # dialog centrally.\n            domElement = element.domElement()\n            measureSpan = domElement.getElementsByClassName('ct--puesdo-select')\n            rect = measureSpan[0].getBoundingClientRect()\n\n        # Set-up the dialog\n        app = ContentTools.EditorApp.get()\n\n        # Modal\n        modal = new ContentTools.ModalUI(transparent=true, allowScrolling=true)\n\n        # When the modal is clicked on the dialog should close\n        modal.addEventListener 'click', () ->\n            @unmount()\n            dialog.hide()\n\n            if element.content\n                # Remove the fake selection from the element\n                element.content = element.content.unformat(from, to, selectTag)\n                element.updateInnerHTML()\n\n                # Restore the selection\n                element.restoreState()\n\n            callback(applied)\n\n            # Dispatch `applied` event\n            if applied\n                ContentTools.Tools.Link.dispatchEditorEvent(\n                    'tool-applied',\n                    toolDetail\n                    )\n\n        # Dialog\n        dialog = new ContentTools.RestrictedLinkDialog(\n            @getAttr('href', element, selection),\n            @getAttr('target', element, selection)\n            )\n\n        # Get the scroll position required for the dialog\n        [scrollX, scrollY] = ContentTools.getScrollPosition()\n\n        # dialog.position([\n        #     rect.left + (rect.width / 2) + scrollX,\n        #     rect.top + (rect.height / 2) + scrollY\n        #     ])\n\n        dialog.addEventListener 'save', (ev) ->\n            detail = ev.detail()\n\n            applied = true\n\n            # Add the link\n            if element.type() is 'Image'\n\n                # Images\n                #\n                # Note: When we add/remove links any alignment class needs to be\n                # moved to either the link (on adding a link) or the image (on\n                # removing a link). Alignment classes are mutually exclusive.\n                alignmentClassNames = [\n                    'align-center',\n                    'align-left',\n                    'align-right'\n                    ]\n\n                if detail.href\n                    element.a = {href: detail.href}\n\n                    if element.a\n                        element.a.class = element.a['class']\n\n                    if detail.target\n                        element.a.target = detail.target\n\n                    for className in alignmentClassNames\n                        if element.hasCSSClass(className)\n                            element.removeCSSClass(className)\n                            element.a['class'] = className\n                            break\n\n                else\n                    linkClasses = []\n                    if element.a['class']\n                        linkClasses = element.a['class'].split(' ')\n                    for className in alignmentClassNames\n                        if linkClasses.indexOf(className) > -1\n                            element.addCSSClass(className)\n                            break\n                    element.a = null\n\n                element.unmount()\n                element.mount()\n\n            else if element.isFixed() and element.tagName() is 'a'\n                # Fixtures\n                element.attr('href', detail.href)\n\n            else\n                # Text elements\n\n                # Clear any existing link\n                element.content = element.content.unformat(from, to, 'a')\n\n                # If specified add the new link\n                if detail.href\n                    a = new HTMLString.Tag('a', detail)\n                    element.content = element.content.format(from, to, a)\n                    element.content.optimize()\n\n                element.updateInnerHTML()\n\n            # Make sure the element is marked as tainted\n            element.taint()\n\n            # Close the modal and dialog\n            modal.dispatchEvent(modal.createEvent('click'))\n\n        app.attach(modal)\n        app.attach(dialog)\n        modal.show()\n        dialog.show()\n\nclass ContentTools.RestrictedLinkDialog extends ContentTools.DialogUI\n\n    # An anchored dialog to support inserting/modifying a link\n\n    # The target that will be set by the link tool if the open in new window\n    # option is selected.\n    NEW_WINDOW_TARGET = '_blank'\n\n    constructor: (href='', target='') ->\n        super()\n\n        # The initial value to set the href and target attribute\n        # of the link as (e.g if we're editing a link).\n        @_href = href\n        @_target = target\n\n    mount: () ->\n        # Mount the widget\n        super()\n\n        # Create the input element for the link\n        @_domInput = document.createElement('input')\n        @_domInput.setAttribute('class', 'ct-anchored-dialog__input')\n        @_domInput.setAttribute('name', 'href')\n        @_domInput.setAttribute(\n            'placeholder',\n            ContentEdit._('Enter a link') + '...'\n            )\n        @_domInput.setAttribute('type', 'text')\n        @_domInput.setAttribute('value', @_href)\n        # @_domElement.appendChild(@_domInput)\n\n        # Create a toggle button to allow users to toogle between no target and\n        # TARGET (open in a new window).\n        @_domTargetButton = @constructor.createDiv([\n            'ct-anchored-dialog__target-button'])\n        # @_domElement.appendChild(@_domTargetButton)\n\n        # Check if the new window target has already been set for the link\n        if @_target == NEW_WINDOW_TARGET\n            ContentEdit.addCSSClass(\n                @_domTargetButton,\n                'ct-anchored-dialog__target-button--active'\n            )\n\n        # Create the confirm button\n        @_domButton = @constructor.createDiv(['ct-anchored-dialog__button'])\n        # @_domElement.appendChild(@_domButton)\n\n        # Add interaction handlers\n        @_addDOMEventListeners()\n\n        if @constructor.LINK_LIST\n            @constructor.LINK_LIST(this)\n\n    save: (value) ->\n        # Save the link. This method triggers the save method against the dialog\n        # allowing the calling code to listen for the `save` event and manage\n        # the outcome.\n\n        if not @isMounted()\n            @dispatchEvent(@createEvent('save'))\n            return\n\n        detail = {href: value}\n        if @_target\n            detail.target = @_target\n\n        @dispatchEvent(@createEvent('save', detail))\n\n    show: () ->\n        # Show the widget\n        super()\n\n        # Once visible automatically give focus to the link input\n        @_domInput.focus()\n\n        # If a there's an intially value then select it so it can be easily\n        # replaced.\n        if @_href\n            @_domInput.select()\n\n    unmount: () ->\n        # Unmount the component from the DOM\n\n        # Unselect any content\n        if @isMounted()\n            @_domInput.blur()\n\n        super()\n\n        @_domButton = null\n        @_domInput = null\n\n    # Private methods\n\n    _addDOMEventListeners: () ->\n        # Add event listeners for the widget\n\n        # Add support for saving the link whenever the `return` key is pressed\n        # or the button is selected.\n\n        # Input\n        @_domInput.addEventListener 'keypress', (ev) =>\n            if ev.keyCode is 13\n                @save()\n\n        # Toggle the target attribute for the link ('' or TARGET)\n        @_domTargetButton.addEventListener 'click', (ev) =>\n            ev.preventDefault()\n\n            # No target\n            if @_target == NEW_WINDOW_TARGET\n                @_target = ''\n                ContentEdit.removeCSSClass(\n                    @_domTargetButton,\n                    'ct-anchored-dialog__target-button--active'\n                )\n\n            # Target TARGET\n            else\n                @_target = NEW_WINDOW_TARGET\n                ContentEdit.addCSSClass(\n                    @_domTargetButton,\n                    'ct-anchored-dialog__target-button--active'\n                )\n\n        # Button\n        @_domButton.addEventListener 'click', (ev) =>\n            ev.preventDefault()\n            @save()\n\n        @_domView.addEventListener 'click', (ev) =>\n            if ev.target.className.indexOf('link-button') == -1\n                return\n            \n            ev.preventDefault()\n            target = ev.target.getAttribute('data-target')\n            @save(target)\n\n\n    setSource: (linkList) ->\n        domView = @_domView\n        domView.style.overflowY=\"scroll\";\n        table = document.createElement('table')\n        table.style.width= \"100%\"\n        thead = document.createElement('thead')\n        \n        nameTitle = document.createElement('th')\n        nameTitle.textContent = \"Name\"\n\n        descTitle = document.createElement('th')\n        descTitle.textContent = \"Description\"\n\n        linkTitle = document.createElement('th')\n        linkTitle.textContent = \"\"\n\n        thead.appendChild(nameTitle)\n        thead.appendChild(descTitle)\n        thead.appendChild(linkTitle)\n\n        tbody = document.createElement('tbody')\n        table.appendChild(thead)\n        table.appendChild(tbody)\n\n        tags = linkList.forEach (link) => \n            tr = document.createElement('tr')\n            name = document.createElement('td')\n            name.textContent=link.name\n            name.style.verticalAlign='middle'\n            desc = document.createElement('td')\n            desc.textContent=link.desc\n            desc.style.verticalAlign='middle'\n            linkCol = document.createElement('td')\n            linkCol.style.textAlign='right'\n            \n\n            domButton = @constructor.createDiv(['ct-anchored-dialog__button link-button'])\n            domButton.setAttribute('data-target', link.target)\n            linkCol.appendChild(domButton)\n\n            tr.appendChild(name)\n            tr.appendChild(desc)\n            tr.appendChild(linkCol)\n\n            tbody.appendChild(tr)\n\n        domView.appendChild(table)\n\n    # setSource: (links) =>\n        # domView = @_domView\n        # linkNodes = (links||[]).map((link) => \n        #     row = document.createElement(\"div\")\n        #     text = document.createElement(\"span\")\n        #     text.innerHTML = link\n\n        #     row.appendChild(text)\n\n        #     domButton = @constructor.createDiv(['ct-anchored-dialog__button link-button'])\n        #     domButton.setAttribute('data-target', link)\n        #     row.appendChild(domButton)\n\n        #     row\n        # ).forEach((node) -> \n        #     domView.appendChild(node)\n        # )\n"
  ]
}